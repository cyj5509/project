<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.devday.mapper.UsBoardMapper">

<!-- 게시글 등록 -->
<insert id="register" parameterType="com.devday.domain.BoardVO">
	INSERT INTO 
   		board_table (bd_number, bd_type, us_id, bd_title, bd_content, bd_register_date, bd_guest_nickname, bd_guest_pw)
	VALUES
		(sequence_bd_number.NEXTVAL, #{bd_type}, #{us_id}, #{bd_title}, #{bd_content}, sysdate, 
		<choose>
             <when test="bd_guest_nickname != null and bd_guest_nickname != ''">
                 #{bd_guest_nickname}
             </when>
             <otherwise>
                 NULL
             </otherwise>
         </choose>,
         <choose>
             <when test="bd_guest_pw != null and bd_guest_pw != ''">
                 #{bd_guest_pw}
             </when>
             <otherwise>
                 NULL
             </otherwise>
         </choose>
         )
</insert>

<!-- 게시글 조회 또는 수정 -->
<select id="get" resultType="com.devday.domain.BoardVO" parameterType="Long">
	SELECT
		bd_number, bd_type, us_id, bd_title, bd_content, bd_register_date, bd_update_date, bd_view_count, bd_guest_nickname, bd_guest_pw, bd_like_count, bd_dislike_count  
	FROM
		board_table
	WHERE
		bd_number = #{bd_number}
</select>

<!-- 전체 목록(여러 개) ─ resultType="" -->
<select id="getList" resultType="com.devday.domain.BoardVO">
	SELECT
		bd_number, bd_type, us_id, bd_title, bd_content, bd_register_date, bd_update_date, bd_view_count, bd_guest_nickname, bd_like_count, bd_dislike_count 
	FROM
		board_table
	ORDER BY
		bd_number DESC
</select> 

<!-- 동적 쿼리 ─ 공통된 SQL 구문 작업을 하기 위한 용도: 검색 조건 -->
<sql id="criteria">
	<trim prefix="(" suffix=") AND" prefixOverrides="OR">
	<!-- collection은 getTypeArr() 메서드 호출, item은 의미 없음 -->
	<!-- 파라미터가 Map이기 때문에 'cri.'의 형태로 접근해줘야 한다. -->
    	<foreach collection="cri.typeArr" item="type">
			<trim prefix="OR">
			    <choose>
			        <when test="type == 'T'.toString()">
			            bd_title LIKE '%' || #{cri.keyword} || '%' 
			        </when>
			        <when test="type == 'I'.toString()">
			            us_id LIKE '%' || #{cri.keyword} || '%' 
			        </when>
			        <when test="type == 'C'.toString()">
			            bd_content LIKE '%' || #{cri.keyword} || '%' 
			        </when>
			    </choose>
			</trim>
    	</foreach>
	</trim>
</sql>

<!-- 페이징 목록(여러 개) ─ resultType="" -->
<!-- CDATA 섹션: XML 관점에서 적합한지에 대해 문법 검사를 하지 않음 -->
<select id="getListWithPaging" resultType="com.devday.domain.BoardVO" parameterType="map">
	<![CDATA[
	SELECT
		bd_number, bd_type, us_id, bd_guest_nickname, bd_title, bd_content, bd_register_date, bd_update_date, bd_view_count, bd_like_count, bd_dislike_count
	FROM 
		(
	    SELECT /*+ INDEX_DESC(board_table pk_bd_number) */
	    		ROWNUM rn, bd_number, bd_type, us_id, bd_guest_nickname, bd_title, bd_content, bd_register_date, bd_update_date, bd_view_count, bd_like_count, bd_dislike_count
	    FROM
	    		board_table 
	    WHERE
			]]>
			<if test="bd_type != null and bd_type != 'total'">
                bd_type = #{bd_type}
                AND
            </if>
			<include refid="criteria"></include> 
			<![CDATA[
	     	ROWNUM <= #{cri.pageNum} * #{cri.amount}
	    )
	WHERE
		rn > (#{cri.pageNum} - 1) * #{cri.amount}
	]]>
</select>

<!--  전체 데이터 개수 -->
<select id="getTotalCount" resultType="int" parameterType="map">
	SELECT
		COUNT(*)
	FROM
		board_table
	WHERE 
		<if test="bd_type != null and bd_type != 'total'">
            bd_type = #{bd_type}
            AND
        </if>
		<include refid="criteria"></include> bd_number > 0
</select>


<!-- 조회수 증가 -->
<update id="readCount" parameterType="Long">
	UPDATE
		board_table
	SET
		bd_view_count = bd_view_count + 1
	WHERE
		bd_number = #{bd_number}
</update>

<!-- parameterType과 관련하여 별칭 사용(mybatis-config.xml 참고) -->
<insert id="insertVote" parameterType="VoteVO">
    INSERT INTO
    		vote_table (vt_number, us_id, non_us_id, bd_number, vt_status, vt_register_date)
    VALUES (
    		sequence_vt_number.NEXTVAL, 
    		#{us_id}, 
    		#{non_us_id}, 
    		#{bd_number}, 
    		#{vt_status}, 
    		TRUNC(SYSDATE) <!-- 날짜 부분만 반환(시간 부분 제거) -->
    	)
</insert>

<!-- 투표 여부 확인: 특정 게시물, 특정 사용자, 특정 날짜 -->
<select id="checkVote" resultType="int" parameterType="map">
    SELECT
        COUNT(*)
    FROM 
        vote_table
    WHERE 
        bd_number = #{bd_number}
	    AND 
	        TRUNC(vt_register_date) = TRUNC(SYSDATE)
	    AND (
	        (#{us_id} IS NOT NULL AND us_id = #{us_id}) OR
	        (#{us_id} IS NULL AND non_us_id = #{non_us_id})
	    )
</select>

<!-- 투표 상태 확인: 특정 게시물, 특정 사용자, 특정 날짜 -->
<select id="getCurrentVoteStatus" resultType="String" parameterType="map">
    SELECT
        vt_status
    FROM 
        vote_table
    WHERE 
        bd_number = #{bd_number}
        AND
        	TRUNC(vt_register_date) = TRUNC(SYSDATE)
        AND (
            (#{us_id} IS NOT NULL AND us_id = #{us_id}) OR
            (#{us_id} IS NULL AND non_us_id = #{non_us_id})
        )
</select>

<!-- 투표 취소: 같은 상태로 다시 투표하는 경우 -->
<update id="cancelVote" parameterType="VoteVO">
    UPDATE
    	vote_table
    SET
    	vt_status = NULL  <!-- 또는 'none'-->
    WHERE
    	bd_number = #{bd_number}
      	AND 
      		TRUNC(vt_register_date) = TRUNC(SYSDATE)
    	AND 
    		(us_id = #{us_id} OR 
            (#{us_id} IS NULL AND non_us_id = #{non_us_id}))
</update>

<!-- 투표 변경: 다른 상태로 다시 투표하는 경우 -->
<update id="changeVote" parameterType="VoteVO">
    UPDATE
    	vote_table
    SET
    	vt_status = #{vt_status}
    WHERE
    	bd_number = #{bd_number}
      	AND 
      		TRUNC(vt_register_date) = TRUNC(SYSDATE)
      	AND 
      		(us_id = #{us_id} OR 
            (#{us_id} IS NULL AND non_us_id = #{non_us_id}))
</update>

<!-- 추천 수 증가 -->
<update id="increaseLike" parameterType="Long">
    UPDATE
    	board_table
    SET 
    	bd_like_count = bd_like_count + 1
    WHERE
    	bd_number = #{bd_number}
</update>

<!-- 비추천 수 증가 -->
<update id="increaseDislike" parameterType="Long">
    UPDATE
   		board_table
    SET
   		bd_dislike_count = bd_dislike_count + 1
    WHERE
   		bd_number = #{bd_number}
</update>

<!-- 추천 수 감소 -->
<update id="decreaseLike" parameterType="Long">
    UPDATE
        board_table
    SET
        bd_like_count = bd_like_count - 1
    WHERE
        bd_number = #{bd_number} AND bd_like_count > 0
</update>

<!-- 비추천 수 감소 -->
<update id="decreaseDislike" parameterType="Long">
    UPDATE
        board_table
    SET
        bd_dislike_count = bd_dislike_count - 1
    WHERE
        bd_number = #{bd_number} AND bd_dislike_count > 0
</update>

<!-- 게시물 수정 -->
<update id="modify" parameterType="com.devday.domain.BoardVO">
	UPDATE
		board_table
	SET
		bd_type = #{bd_type},
		bd_title = #{bd_title},
		bd_content = #{bd_content},
		bd_update_date = sysdate
	WHERE
		bd_number = #{bd_number}
</update>

<!-- 게시물 삭제 -->
<delete id="delete" parameterType="Long">
	DELETE FROM
		board_table
	WHERE
		bd_number = #{bd_number}
</delete>

</mapper>