<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.devday.mapper.CommentMapper">

<!-- 댓글(대댓글) 추가 -->
<insert id="insert" parameterType="CommentVO">
	<!-- 댓글 추가 후, 생성된 cm_code(댓글 코드) 값을 조회하기 위한 selectKey -->
	<selectKey keyProperty="cm_code" resultType="Long" order="AFTER">
        SELECT sequence_cm_code.CURRVAL FROM DUAL
    </selectKey>
	INSERT INTO 
		comment_table (cm_code, cm_parent_code, bd_number, us_id, cm_content, cm_register_date, cm_guest_nickname, cm_guest_pw)
	VALUES 
		(
			sequence_cm_code.NEXTVAL, 
			#{cm_parent_code}, 
			#{bd_number}, 
			#{us_id}, 
			#{cm_content},
			SYSDATE, 
			#{cm_guest_nickname}, 
			#{cm_guest_pw}
		)
</insert>

<!-- 댓글(대댓글) 수정 -->
<update id="modify" parameterType="CommentVO">
	UPDATE
		comment_table
	SET
		cm_content = #{cm_content}, cm_update_date = SYSDATE
	WHERE
		cm_code = #{cm_code}
</update>

<!-- 댓글(대댓글) 삭제 -->
<delete id="delete" parameterType="Long">
	DELETE FROM
		comment_table
	WHERE
		cm_code = #{cm_code}
</delete>

<!-- 특정 댓글의 상세 정보를 가져와서 수정 또는 삭제 처리  -->
<select id="findComment" resultType="CommentVO" parameterType="Long">
    SELECT 
        cm_code, cm_parent_code, bd_number, us_id, cm_content, cm_register_date, cm_update_date, cm_guest_nickname, cm_guest_pw
    FROM 
        comment_table
    WHERE
        cm_code = #{cm_code}
</select>

<!-- 특정 게시글의 원본 댓글 목록 조회 -->
<select id="getComment" parameterType="map" resultType="CommentVO">
	<![CDATA[
	SELECT
		cm_code, bd_number, us_id, cm_content, cm_register_date, cm_update_date, cm_guest_nickname
	FROM
	    (
	    SELECT /*+ INDEX_DESC(comment_table pk_cm_code) */
    		ROWNUM rn, cm_code, bd_number, us_id, cm_content, cm_register_date, cm_update_date, cm_guest_nickname
	    FROM
    		comment_table
	    WHERE
			bd_number = #{bd_number} 
			AND 
				cm_parent_code IS NULL
			AND 
				ROWNUM <= #{cri.pageNum} * #{cri.amount} 
	    )
	WHERE
		rn > (#{cri.pageNum} -1) * #{cri.amount}
	]]>
</select>

<!-- 특정 원본 댓글에 대한 모든 대댓글 조회 -->
<select id="getReply" parameterType="Long" resultType="CommentVO">
	SELECT
		cm_code, cm_parent_code, bd_number, us_id, cm_content, cm_register_date, cm_update_date, cm_guest_nickname
	FROM
		comment_table
	WHERE
		cm_parent_code = #{cm_code} <!-- 특정 원본 댓글의 대댓글 조회 -->
	ORDER BY
		cm_register_date <!-- 등록순으로 정렬 -->
</select>

<!-- 특정 게시물에 대한 원본 댓글 수 계산 -->
<select id="countComments" resultType="int" parameterType="Long" >
	SELECT
		COUNT(*)
	FROM
		comment_table
	WHERE
		bd_number = #{bd_number} AND cm_parent_code IS NULL
</select>

<!-- 특정 원본 댓글에 대한 대댓글(답글) 수 계산 -->
<select id="countReplies" resultType="int" parameterType="Long">
    SELECT
    	COUNT(*)
    FROM
    	comment_table
    WHERE
    	cm_parent_code = #{cm_code}
</select>

<!-- 특정 게시물의 모든 댓글과 대댓글을 계층적으로 조회 -->
<select id="getAllComments" resultType="CommentVO">
    SELECT 
        cm_code, cm_parent_code, bd_number, us_id, cm_content, cm_register_date, cm_update_date, cm_guest_nickname
    FROM 
        comment_table
    WHERE
    	bd_number = #{bd_number} 
    START WITH 
        cm_parent_code IS NULL <!-- 최상위 댓글(원본 댓글)부터 조회 시작 -->
    CONNECT BY 
        PRIOR cm_code = cm_parent_code <!-- 대댓글 연결 -->
    ORDER SIBLINGS BY 
        cm_register_date
</select>

<insert id="addReply" parameterType="CommentVO">
    INSERT INTO 
        comment_table (cm_code, cm_parent_code, bd_number, us_id, cm_content, cm_register_date, cm_guest_nickname, cm_guest_pw)
    VALUES 
        (
            sequence_cm_code.NEXTVAL, 
            #{cm_parent_code}, 
            #{bd_number}, 
            #{us_id}, 
            #{cm_content},
            SYSDATE, 
            #{cm_guest_nickname}, 
            #{cm_guest_pw}
        )
</insert>

</mapper>