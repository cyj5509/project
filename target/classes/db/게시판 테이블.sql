
-- 게시판 테이블 생성
CREATE TABLE BOARD (
  BNO NUMBER, -- 글번호
  TITLE      VARCHAR2(100) NOT NULL,  -- 제목
  CONTENT    VARCHAR2(1000) NOT NULL, -- 내용
  WRITER     VARCHAR2(100) NOT NULL,  -- 작성자
  REGDATE    DATE  DEFAULT SYSDATE,   -- 등록일
  UPDATEDDATE DATE DEFAULT SYSDATE,   -- 수정일
  -- 테이블을 처음 만드는 경우 아래처럼 코드 추가
  -- VIEWCOUNT NUMBER DEFAULT 0, -- 조회수
  CONSTRAINT PK_BOARD PRIMARY KEY(BNO)
);

-- PRIMARY KEY 제약 조건 이름인 PK_BOARD가 인덱스명 PK_BOARD로 생성된다.

-- 조회 수 작업: viewcount 컬럼 추가

-- 테이블 삭제
DROP TABLE BOARD;

-- 시퀀스 생성
CREATE SEQUENCE SEQ_BOARD;

-- 시퀀스 삭제
DROP SEQUENCE SEQ_BOARD;

-- 시퀀스 명령어
/*
  - SEQ_BOARD.NEXTVAL: 해당 시퀀스에서 다음 순번 값을 자동으로 가져온다
  - SEQ_BOARD.CURRVAL: 해당 시퀀스의 현재 값을 알 수 있다.
*/
SELECT SEQ_BOARD.NEXTVAL FROM DUAL;

SELECT SEQ_BOARD.CURRVAL FROM DUAL;

INSERT INTO BOARD(BNO, TITLE, CONTENT, WRITER)
  VALUES(1, '테스트', '스프링 게시판 연습', 'user01');

INSERT INTO BOARD(BNO, TITLE, CONTENT, WRITER)
  VALUES(SEQ_BOARD.NEXTVAL, '테스트', '스프링 게시판 연습', 'user01');
  
-- 최신 글 순서
SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE FROM BOARD ORDER BY BNO DESC;

-- 게시물 읽기
SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE FROM BOARD WHERE BNO = 1;

-- 게시물 수정(기본 구조)
-- UPDATE BOARD SET TITLE = ?, CONTENT = ?, UPDATEDDATE = SYSDATE WHERE BNO = ?;

-- 게시물 삭제
-- DELETE FROM BOARD WHERE BNO = ?;

-- 

SELECT * FROM BOARD;

ROLLBACK;

DELETE FROM BOARD;

COMMIT;

-- 시퀀스 상태
SELECT SEQ_BOARD.CURRVAL FROM DUAL;

-- 시퀀스 삭제 후 재생성
DROP SEQUENCE SEQ_BOARD;
CREATE SEQUENCE SEQ_BOARD; -- 초기값 1, 증가값 1

-- 더미 데이터
INSERT INTO BOARD(BNO, TITLE, CONTENT, WRITER)
SELECT SEQ_BOARD.NEXTVAL, TITLE, CONTENT, WRITER FROM BOARD;

SELECT * FROM BOARD ORDER BY BNO ASC;

-- 최신 글 순서
SELECT * FROM BOARD ORDER BY BNO DESC;

COMMIT;

-- 인덱스 힌트 ↔ ORDER BY와의 비교
/*
-- 오름차순: /*+ INDEX(테이블명 또는 별칭 인덱스명)*/
-- 내림차순: /*+ INDEX_DESC(테이블명 또는 별칭 인덱스명 */ */

-- 별칭
SELECT /*+ INDEX_DESC(b PK_BOARD) */ BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE FROM BOARD b;
-- 테이블명
SELECT /*+ INDEX_DESC(BOARD PK_BOARD) */ BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE FROM BOARD;

-- ROWNUM을 5~10 범위 조건을 사용 시 
SELECT ROWNUM, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE
FROM BOARD
WHERE ROWNUM >= 5 AND ROWNUM <= 10; -- 결과가 없다.

-- 서브쿼리(인라인 뷰) 형태로 작성한다.
-- BNO 대신 쓰이는 'ROWNUM'(의사 컬럼)은 별칭까지 지정해줘야 한다.
-- SELECT * 또는
SELECT RN, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE
FROM (
      SELECT ROWNUM AS RN, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE
      FROM BOARD
)
WHERE RN >= 5 AND RN <= 10;

-- 페이징 쿼리
-- 1 2 3 4 5
SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE
	FROM 
	    (
	    SELECT /*+ INDEX_DESC(BOARD PK_BOARD) */ 
        ROWNUM RN, BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE 
	    FROM BOARD -- 내림차순
	    WHERE ROWNUM <= #{pageNum} * #{amount}
	    )
	WHERE RN > (#{pageNum} -1) * #{amount};

-- 테이블 전체 데이터 개수
SELECT COUNT(*) FROM BOARD;

-- 페이징 정보: PageDTO(startPage=1, endPage=10, prev=false, next=true, total=2048, cri=Criteria(pageNum=1, amount=10, type=null, keyword=null))

-- page = 1
SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE
	FROM 
	    (
	    SELECT /*+ INDEX_DESC(BOARD PK_BOARD) */ 
        ROWNUM RN, BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE 
	    FROM BOARD -- 내림차순
	    WHERE ROWNUM <= 1 * 5
	    )
	WHERE RN > (1 -1) * 5; -- 0
  
-- page = 2
SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE
	FROM 
	    (
	    SELECT /*+ INDEX_DESC(BOARD PK_BOARD) */ 
        ROWNUM RN, BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE 
	    FROM BOARD -- 내림차순
	    WHERE ROWNUM <= 2 * 5
	    )
	WHERE RN > (2 -1) * 5; -- 5
  
-- page = 3
SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE
	FROM 
	    (
	    SELECT /*+ INDEX_DESC(BOARD PK_BOARD) */ 
        ROWNUM RN, BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE 
	    FROM BOARD -- 내림차순
	    WHERE ROWNUM <= 3 * 5
	    )
	WHERE RN > (3 -1) * 5; -- 10

UPDATE BOARD SET title = '사과'
WHERE bno in (2048, 2045, 2041, 2038, 2035, 2031, 2028, 2025, 2021, 2018, 2015, 2011);

COMMIT;

UPDATE BOARD SET writer = 'user02'
WHERE bno in (1048, 1045, 1041, 1038, 1035, 1031, 1028, 1025, 1021, 1018, 1015, 1011);

COMMIT;

UPDATE BOARD SET VIEWCOUNT = 10 WHERE BNO = 2048;

COMMIT;

-- VIEWCOUNT 컬럼 값을 NULL에서 0으로 작업
UPDATE BOARD SET VIEWCOUNT = 0;

COMMIT;

-- 에러 발생(log4j): OR을 제거하면 정상 출력
SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE, VIEWCOUNT
FROM (
      SELECT /*+ INDEX_DESC(BOARD PK_BOARD) */ ROWNUM RN, BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDDATE, VIEWCOUNT 
      FROM BOARD 
      WHERE ( OR title like '%' || '사과' || '%' ) AND ROWNUM <= 1 * 10 )
WHERE RN > (1 -1) * 10;

-- 신규 프로젝트(SBoard)

-- 게시판 테이블 생성
CREATE TABLE SBOARD (
  IDX NUMBER, -- 글번호
  SUBJECT      VARCHAR2(100) NOT NULL,  -- 제목
  CONTENT    VARCHAR2(1000) NOT NULL, -- 내용
  AUTHOR     VARCHAR2(100) NOT NULL,  -- 작성자
  CREATEDATE    DATE  DEFAULT SYSDATE,   -- 등록일
  EDITDATE DATE DEFAULT SYSDATE,   -- 수정일
  READCOUNT  NUMBER DEFAULT 0,
  CONSTRAINT PK_SBOARD PRIMARY KEY(IDX)
);

-- PRIMARY KEY 제약 조건 이름인 PK_SBOARD가 인덱스명 PK_SBOARD로 생성된다.

-- 시퀀스 생성
CREATE SEQUENCE SEQ_SBOARD;

SELECT * FROM SBOARD ORDER BY IDX DESC;

INSERT INTO SBOARD(IDX, SUBJECT, CONTENT, AUTHOR, READCOUNT)
  VALUES(1, '테스트', '스프링 게시판 연습', 'user01', 0);

INSERT INTO SBOARD(IDX, SUBJECT, CONTENT, AUTHOR, READCOUNT)
  VALUES(SEQ_SBOARD.NEXTVAL, '테스트', '스프링 게시판 연습', 'user01', 0);

COMMIT;
